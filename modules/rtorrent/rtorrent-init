#!/bin/bash
### BEGIN INIT INFO
# Provides:          rtorrent
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start rtorrent at boot time
# Description:       Enable service provided by daemon.
### END INIT INFO

source /home/$USER/.rtorrent.init.conf

PATH=/usr/bin:/usr/local/bin:/usr/local/sbin:/sbin:/bin:/usr/sbin
NAME=rtorrent
DAEMON=$NAME
SCRIPTNAME=/etc/init.d/$NAME

checkcnfg() {
  exists=0
  for i in `echo "$PATH" | tr ':' '\n'` ; do
    if [[ -f $i/$NAME ]] ; then
      exists=1
      break
    fi
  done
  if [[ $exists -eq 0 ]] ; then
    echo "cannot find $NAME binary in PATH: $PATH" | tee -a "$logfile" >&2
    exit 3
  fi
  if ! [[ -r ${config} ]] ; then
      echo "cannot find readable config ${config}. check that it is there and permissions are appropriate"  | tee -a "$logfile" >&2
      exit 3
  fi
  session=$(getsession ${config})
  if ! [[ -d ${session} ]] ; then
      echo "cannot find readable session directory ${session} from config ${config}. check permissions" | tee -a "$logfile" >&2
      exit 3
  fi

}

d_start() {
  [[ -d ${base} ]] && cd ${base}
  stty stop undef && stty start undef
  su $user -c "mkdir -p /home/$USER/.dtach && rm -f /home/$USER/.dtach/rtorrent && dtach -n /home/$USER/.dtach/rtorrent rtorrent"
  sleep 1
}

d_stop() {
    session=$(getsession ${config})
    if ! [[ -s ${session}/rtorrent.lock ]] ; then
        return
    fi
    pid=$(cat ${session}/rtorrent.lock | awk -F: '{print($2)}' | sed "s/[^0-9]//g")
    if ps -A | grep -sq ${pid}.*rtorrent ; then
        kill -s INT ${pid}
    fi
	sleep 1
}

getsession() { 
    session=$(cat "$1" | grep "^[[:space:]]*session[[:space:]]*=" | sed "s/^[[:space:]]*session[[:space:]]*=[[:space:]]*//" )
    echo $session
}

##[ MAIN ]##
checkcnfg

case "$1" in
  start)
    echo -n "Starting $NAME..."
    d_start
    echo " done"
    ;;
  stop)
    echo -n "Stopping $NAME..."
    d_stop
    echo " done"
    ;;
  restart|force-reload|reload)
    echo -n "Stopping $NAME..."
    d_stop
    echo " done"
    echo -n "Starting $NAME..."
    d_start
    echo " done"
    ;;
  *)
    echo "Usage: $SCRIPTNAME {start|stop|restart}" >&2
    exit 1
    ;;
esac
exit 0
